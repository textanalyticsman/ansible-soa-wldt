---
  # This must be executed just in one node. Thus the file generated by pack will be
  # available just in one machine. Therefore, the unpack role should have a task to
  # distribute the file before running unpack command.
  - name: Getting configuration to run pack.sh
    set_fact:
      domainParentDir: "{{ soa_domain | json_query('[][home][][].parentdir')|join(',') }}"
      domainName: "{{ [topology] | json_query('[].Name') | join(' ') }}"
      # Directory to save template generated after running pack command
      domainTemplateLocation: "{{ soa_domain | json_query('[][home][][].templatePackDir')|join(',') }}"
      # Name for the file generated after running pack command
      domainTemplateName: "{{ soa_domain | json_query('[][home][][].templatePackName')|join(',') }}"      
    
  - name: Creating directory to save domain template
    file:
      path: "{{ domainTemplateLocation }}"
      state: directory
      owner: "{{ oracle_user }}"
      group: "{{ oracle_group }}"
      mode: 0755

  # Why deleting? Let us say we have introduced changes on the domain, the pack command will fail
  # if it founds a template with the same name it is trying to create. This is stated here
  # https://docs.oracle.com/en/middleware/fusion-middleware/12.2.1.3/wldpu/pack-and-unpack-command-reference.html#GUID-07FEBB97-5ED7-4FAC-A19B-9830A6AB6E58
  - name: Deleting the domain template if exists
    file:
      path: "{{ domainTemplateLocation }}/{{ domainTemplateName }}.jar"
      state: absent

  - name: Packing the domain 
    command: "{{ oracle_common }}/common/bin/pack.sh \
      -domain={{ domainParentDir }}/{{ domainName }} \
      -template={{ domainTemplateLocation }}/{{ domainTemplateName }}.jar \
      -managed=true \
      -template_name={{ domainTemplateName }}"
    changed_when: false